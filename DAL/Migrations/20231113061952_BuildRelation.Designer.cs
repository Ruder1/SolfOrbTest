// <auto-generated />
using System;
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(SolfOrbContext))]
    [Migration("20231113061952_BuildRelation")]
    partial class BuildRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 11, 13, 6, 19, 51, 882, DateTimeKind.Utc).AddTicks(3096),
                            Number = "#125321423",
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 11, 13, 6, 19, 51, 882, DateTimeKind.Utc).AddTicks(3098),
                            Number = "#125425324",
                            ProviderId = 4
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 11, 13, 6, 19, 51, 882, DateTimeKind.Utc).AddTicks(3099),
                            Number = "#654634523",
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 11, 13, 6, 19, 51, 882, DateTimeKind.Utc).AddTicks(3100),
                            Number = "#6512357671",
                            ProviderId = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Вилка",
                            OrderId = 1,
                            Quantity = 123.43m,
                            Unit = "Что то"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ложка",
                            OrderId = 2,
                            Quantity = 5123.43m,
                            Unit = "Что то"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Мебель",
                            OrderId = 3,
                            Quantity = 1135.43m,
                            Unit = "Что то"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ресурс",
                            OrderId = 4,
                            Quantity = 4563.43m,
                            Unit = "Что то"
                        });
                });

            modelBuilder.Entity("DAL.Entities.OrdersWithItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrdersWithItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            OrderItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            OrderItemId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            OrderItemId = 3
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            OrderItemId = 4
                        });
                });

            modelBuilder.Entity("DAL.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Швеи"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Завод"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Магазин"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Офис"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.HasOne("DAL.Entities.Provider", "Provider")
                        .WithMany("Order")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("DAL.Entities.OrdersWithItems", b =>
                {
                    b.HasOne("DAL.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("DAL.Entities.OrderItem", null)
                        .WithMany()
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("DAL.Entities.Provider", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
